/*
 * Copyright (c) 2009 - 2021, DHBW Mannheim - TIGERs Mannheim
 */

plugins {
    id 'sumatra.java-conventions'
    id 'application'

    id 'com.palantir.git-version' version '0.12.3'
    id 'ca.cutterslade.analyze' version '1.6.0'
    id 'com.google.cloud.tools.jib' version '3.0.0'
    id "com.github.breadmoirai.github-release" version "2.2.12"
}

ext.versionDetails = versionDetails(prefix: "version/")
version gitVersion(prefix: "version/")

tasks.named('wrapper').configure {
    // Use the 'all' distributable when upgrading the Gradle wrapper
    distributionType = Wrapper.DistributionType.ALL
}

dependencies {
    implementation project(':autoreferee-gui')

    implementation project(':common-gui')
    implementation project(':common-gui-config')

    implementation project(':sumatra-model')
    implementation project(':sumatra-gui-log')
    implementation project(':sumatra-gui-referee')
    implementation project(':sumatra-gui-replay')
    implementation project(':sumatra-gui-visualizer')

    implementation project(':moduli-record')
    implementation project(':moduli-autoreferee')
    runtimeOnly project(':moduli-wp')
    runtimeOnly project(':moduli-referee')

    implementation 'com.github.TIGERs-Mannheim:moduli:2.2'
    implementation 'com.github.TIGERs-Mannheim:infonode:1.7.0'

    implementation 'org.apache.logging.log4j:log4j-api:2.12.1'
    runtimeOnly 'org.apache.logging.log4j:log4j-core:2.12.1'
    runtimeOnly 'org.apache.logging.log4j:log4j-1.2-api:2.12.1'
    runtimeOnly 'org.slf4j:slf4j-log4j12:1.7.25'

    implementation 'commons-cli:commons-cli:1.4'
}

application {
    mainClass.set('edu.tigers.autoref.AutoReferee')
    applicationDefaultJvmArgs = [
            '-Xms64m',
            '-Xmx2G',
            '-server',
            '-Dsun.java2d.d3d=false',
            '-Djava.net.preferIPv4Stack=true',
    ]
}

jib {
    to {
        image = "registry.hub.docker.com/tigersmannheim/auto-referee:latest"
        auth {
            username = System.getenv("DOCKER_HUB_USERNAME") ?: ""
            password = System.getenv("DOCKER_HUB_PASSWORD") ?: ""
        }
        tags = [rootProject.version]
    }
    from {
        // gcr.io/distroless/java:11
        image = "gcr.io/distroless/java@sha256:9d4092ba5e1c9dc4d1490fdead1dd7ea5c64e635b729fee11a6af55f51b337f8"
    }
    extraDirectories {
        paths {
            path {
                from = file('config')
                into = '/config'
            }
            path {
                from = file('src/main/jib')
                into = '/'
            }
        }
    }
}

run.workingDir = rootProject.projectDir

// set version here to avoid overriding the project version.
// version is set to null to skip it completely in the artifact names
// Thus, it is guaranteed that old artifacts are always overwritten.
distZip.archiveVersion.convention(null)
jar.archiveVersion.convention(null)

// disable tar distribution to avoid redundant artifacts
distTar.enabled = false

distributions {
    main {
        contents {
            from('config') {
                into 'config'
            }
        }
    }
}

githubRelease {
    token System.getenv("GITHUB_TOKEN") ?: ""
    owner "TIGERs-Mannheim"
    repo.set("AutoReferee")
    releaseAssets distZip
    tagName.set("version-${versionDetails.lastTag}")
}
