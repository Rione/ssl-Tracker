/*
 * Copyright (c) 2009 - 2021, DHBW Mannheim - TIGERs Mannheim
 */

plugins {
    id 'sumatra.java'
    id 'sumatra.test'
    id 'sumatra.test.spock'
    id 'java-library'
}

dependencies {
    api project(':common-math')

    implementation 'com.github.TIGERs-Mannheim.matlabcontrol:matlabcontrol:4.1.2'
    implementation 'com.github.g3force:String2ValueConverter:2.2.1'

    implementation 'commons-lang:commons-lang:2.6'
    implementation 'org.apache.commons:commons-math3:3.6.1'

    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    annotationProcessor 'org.apache.logging.log4j:log4j-core:2.20.0'

    implementation 'com.sleepycat:je:18.3.12'
    implementation 'gov.nist.math:jama:1.0.3'
    implementation 'net.jafama:jafama:2.3.2'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    testImplementation 'org.openjdk.jmh:jmh-core:1.36'
    testAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.36'
}

tasks.register("runBangBangTrajectoryBenchmark", JavaExec) {
    group = "Execution"
    description = "Run BangBangTrajectoryBenchmark"
    classpath = sourceSets.test.runtimeClasspath
    mainClass.set("edu.tigers.sumatra.trajectory.BangBangTrajectoryBenchmark")
}
